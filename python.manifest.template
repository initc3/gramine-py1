# Python3 manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "{{ log_level }}"

loader.env.PYTHONUNBUFFERED = "1"

loader.env.LD_LIBRARY_PATH = "/lib:/lib:{{ arch_libdir }}:/usr{{ arch_libdir }}"

loader.env.RA_TYPE = "dcap"

#loader.argv = ["python", "unicorn.py", "-w1", "-b0.0.0.0:8000", "app:app" ]
loader.argv0_override = "python"
loader.argv1_override = "app.py"
loader.insecure__use_cmdline_argv = true

sys.enable_sigterm_injection = true

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr/{{ arch_libdir }}", uri = "file:/usr/{{ arch_libdir }}" },
  #
# This is the system python path.
# We could also replace with a venv
{% for path in python.get_sys_path(entrypoint) %}
  { path = "{{ path }}", uri = "file:{{ path }}" },
{% endfor %}
  { path = "{{ entrypoint }}", uri = "file:{{ entrypoint }}" },
  

  { type = "tmpfs", path = "/tmp" },
  { type = "encrypted", path = "/data/", uri = "file:enclave_data/", key_name = "_sgx_mrsigner" },

  { path = "/untrustedhost", uri = "file:untrustedhost/" },
  { path = "/etc/ssl/certs/ca-certificates.crt", uri = "file:/etc/ssl/certs/ca-certificates.crt" },
]

sys.stack.size = "2M"
sys.enable_extra_runtime_domain_names_conf = true

sgx.debug = false

sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.nonpie_binary = true
sgx.enclave_size = "256M"
sgx.max_threads = 3

sgx.remote_attestation = "dcap"

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
{% for path in python.get_sys_path(entrypoint) %}
  "file:{{ path }}{{ '/' if path.is_dir() else '' }}",
{% endfor %}  
#
  "file:ipfs_cid/",
  "file:/etc/ssl/certs/ca-certificates.crt",
  "file:rsademo.py",
  "file:app.py",
  "file:unicorn.py",
]

# Untrusted files for communication with the host can go here
sgx.allowed_files = [
  "file:untrustedhost",
]
